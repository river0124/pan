[buildout]
extends = developer.cfg
          https://raw.github.com/mete0r/mkvenv/master/lib/buildout.extends/mkvenv.cfg
develop+= tools/constants
          tools/jingodf
parts+= tox-ini
        tox-py25
        tox-jy25
        wheelhouse

[versions]
collective.xmltestreport = 1.2.6

[constants]
recipe = pyhwp.dev.constants

[wheelhouse]
recipe = z3c.recipe.mkdir
paths=wheelhouse

[tox]
recipe = zc.recipe.egg
eggs = tox

[tox-ini]
recipe = collective.recipe.template
input = ${buildout:directory}/tox.ini.in
output = ${buildout:directory}/tox.ini
mode = 755

[tox-shim]
recipe = collective.recipe.template
mode = 755
output = ${buildout:bin-directory}/${:name}
input = inline:
        #!/bin/sh
        set -e

        # build virtualenv
        ${:mkvenv} ${:envdir}
        . ${:envbindir}/activate

        # sdist & install
        ${:envpython} setup.py install

        ${:environment-variables}

        # ---- commands ----
	${:envpython} ${:toxinidir}/misc/cleanup-pyc.py ${:toxinidir}/pyhwp ${:toxinidir}/pyhwp_uno ${:toxinidir}/unokit
	${:envpython} ${:toxinidir}/misc/mkdir.py ${:envtmpdir}

        ${:envbindir}/pip install nose coverage
        ${:install-crypto}
        ${:install-lxml}
        
	${:envbindir}/coverage run -p ${:coverage-options} ${:envbindir}/nosetests${constants:script_py_suffix} -v -w ${:envtmpdir} ${:toxinidir}/pyhwp-tests --logging-config=${:toxinidir}/etc/testlog.conf --with-xunit --xunit-file=${:envtmpdir}/nosetests.xml
	${:envpython} ${:toxinidir}/misc/test-cli.py
	${:envpython} ${:toxinidir}/misc/prepare-hwp5-xsl-fixtures.py --fixtures-dir=${:toxinidir}/pyhwp-tests/hwp5_tests/fixtures --out-dir=${:envtmpdir}/hwp5_xsl_fixtures
	${:toxinidir}/bin/xsltest --styles-dir=${:toxinidir}/pyhwp/hwp5/xsl --import-dir=${:envtmpdir}/hwp5_xsl_fixtures --gen-dir=${:envtmpdir}/hwp5_xsl_tests ${:toxinidir}/pyhwp-tests/hwp5_xsl_tests

        echo '${:name} successful.'

name=${:_buildout_section_name_}
mkvenv=
envdir=${buildout:parts-directory}/${:name}
envbindir=${:envdir}/bin
envtmpdir=${:envdir}/tmp
envpython=${:envdir}/bin/python
toxinidir=${buildout:directory}

environment-variables=
install-lxml=
install-crypto=
coverage-options=--source=hwp5,hwp5_tests 


[tox-py25]
<=tox-shim
mkvenv=${mkvenv-CPython-2.5:output}

install-lxml=[ -e ${:lxml-built} ] && tar -C ${:site-packages} -xzf ${:lxml-built} || ${:envbindir}/pip install lxml && tar -C ${:site-packages} -czf ${:lxml-built} lxml
site-packages=${:envdir}/lib/python2.5/site-packages
lxml-built=${buildout:parts-directory}/tox-py25-lxml-built.tar.gz

install-crypto=[ -e ${:pycrypto-built} ] && tar -C ${:site-packages} -xzf ${:pycrypto-built} || ${:envbindir}/pip install pycrypo && tar -C ${:site-packages} -czf ${:pycrypto-built} Crypto
pycrypto-built=${buildout:parts-directory}/tox-py25-pycrypto-built.tar.gz

[tox-jy25]
<=tox-shim
mkvenv=${mkvenv-Jython-2.5:output}

environment-variables = export JYTHONPATH=${poi-3.9:destination}/poi-3.9-20121203.jar
                        export PIP_INSECURE=1

# WORKAROUND: 현재 jython 2.5.3, coverage 3.5.3에서 coverage run 실행 시
# --source=hwp5,hwp5_tests 옵션을 주면 이상하게도 hwp5_tests의 결과만 저장된다.
# 따라서 --source 대신 -L을 주어 모든 파일에 대해 coverage 결과를 얻은 후,
# coverage xml에서 필터링한다.
coverage-options=--source=hwp5,hwp5_tests 

[poi-3.9]
recipe = hexagonit.recipe.download
url = ${poi-bin-3.9-20121203.tar.gz:downloaded}
destination=${buildout:parts-directory}/poi-3.9
strip-top-level-dir=true

[poi-bin-3.9-20121203.tar.gz]
recipe = hexagonit.recipe.download
url = http://archive.apache.org/dist/poi/release/bin/${:filename}
md5sum = 09c4dfd63317bb9eb37fe12d6febea74
download-only = true
destination=${buildout:parts-directory}
filename=poi-bin-3.9-20121203.tar.gz 

downloaded=${:destination}/${:filename}
